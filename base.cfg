[buildout]

extensions =
    mr.developer
dump-picked-versions-file = versions-picked.cfg
overwrite-picked-versions-file = true

index = http://pypi.imio.be/imio/imio/+simple/

parts =
    productdistros
    svnproducts
    omelette
    instance1
    zopepy
    repozo

# If you want to get the last versions of eggs, you have to comment the line "versions-prod.cfg"
extends = 
    http://dist.plone.org/release/4.3.6/versions.cfg
    versions-base.cfg

versions=versions

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.3.6
    http://dist.plone.org/thirdparty
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads
    http://b.pypi.python.org
    http://c.pypi.python.org
    http://d.pypi.python.org

# Add additional eggs here
# elementtree is required by Plone
eggs =
    Plone
    Pillow
    Products.PasswordStrength 
    Products.PasswordResetTool 
    zope.app.component
#    PyXML
#- hotfix -#
#    Products.PloneHotfix20110720  # <= 3.3.5 , <= 4.0.3
#    Products.PloneHotfix20110531  # <= 3.3.5 , <= 4.0.5
#    Products.PloneHotfix20121106  # <= 4.2.2, <= 4.3a2
    Products.PloneHotfix20130618 # <= 4.3.1, <= 4.2.5
#    Products.Zope_Hotfix_20110622  # <= 3.3.5 , <= 4.0.7, <= 4.1rc3

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =

sources = sources
sources-dir = src
auto-checkout = appy
                plone.app.referenceintegrity
                Products.urban
                imio.pm.wsclient
                imio.pm.locales
                communesplone.iconified_document_actions
                eea.facetednavigation
                eea.faceted.vocabularies

# Only take stable eggs
#prefer-final = true

# Always unzip eggs
unzip = true

[sources]
Products.urban = svn http://svn.communesplone.org/svn/communesplone/Products.urban/tags/1.11.0
appy = svn http://svn.communesplone.org/svn/communesplone/appy/trunk/
plone.app.referenceintegrity = git https://github.com/imio/plone.app.referenceintegrity.git
Products.CMFPlone = svn https://svn.plone.org/svn/plone/Products.CMFPlone/branches/4.1/
imio.pm.wsclient = svn http://svn.communesplone.org/svn/communesplone/imio.pm.wsclient/trunk/
imio.pm.locales = svn http://svn.communesplone.org/svn/communesplone/imio.pm.locales/trunk/
communesplone.iconified_document_actions = svn http://svn.communesplone.org/svn/communesplone/communesplone.iconified_document_actions/trunk@12349 
eea.facetednavigation = git https://github.com/collective/eea.facetednavigation.git
eea.faceted.vocabularies = git https://github.com/collective/eea.faceted.vocabularies.git


# Use this section to download additional old-style products.
# List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented). If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL,
# normally with a .tar.gz suffix or similar) under 'nested-packages'.
# If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.

[productdistros]
recipe = plone.recipe.distros
urls = 
#    file://${buildout:directory}/ZPsycopgDA_2013.tgz
nested-packages = 
version-suffix-packages = 

[svnproducts]
recipe = infrae.subversion
urls =
    http://svn.communesplone.org/svn/communesplone/CPUtils/trunk CPUtils

[omelette]
recipe = collective.recipe.omelette
eggs =
    ${instance1:eggs}
    ${buildout:eggs}
products = ${instance1:products}
#packages = ${zope2:location}/lib/python ./

[instance1]
recipe = plone.recipe.zope2instance
#effective-user = 
user = admin:admin
http-address = 8081
zserver-threads = 4
debug-mode = off
verbose-security = off
zope-conf-additional =
  %define FILESTORAGE ${buildout:directory}/var/filestorage
  %define BLOBSTORAGE ${buildout:directory}/var/blobstorage
  %include ${buildout:directory}/zope_add.conf
environment-vars =
  PYTHON_EGG_CACHE ${buildout:directory}/python-eggs
  zope_i18n_compile_mo_files true

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} my.package
eggs =
    ${buildout:eggs}
    Plone
    Products.MasterSelectWidget
    Products.ContentTypeValidator
    Products.csvreplicata
    Products.urban
    Genshi
    collective.ckeditor
    collective.iconifieddocumentactions
    communesplone.layout
    psycopg2
    plone.app.referenceintegrity
    imio.pm.wsclient
    imio.pm.locales
    imio.actionspanel
    plonetheme.imioapps
    communesplone.iconified_document_actions

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
    collective.ckeditor
    collective.iconifieddocumentactions
    communesplone.iconified_document_actions
    plone.app.referenceintegrity
    imio.pm.wsclient
    imio.pm.locales
    imio.actionspanel
    plonetheme.imioapps

products =
    ${buildout:directory}/products
    ${productdistros:location}
    ${svnproducts:location}

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance1:eggs}
interpreter = zopepy
scripts = zopepy

[templates]
recipe = zc.recipe.egg:scripts
eggs = Products.urban [templates]

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo
