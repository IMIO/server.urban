[buildout]

extensions =
    mr.developer
dump-picked-versions-file = versions-picked.cfg
overwrite-picked-versions-file = true

newest = false

parts =
    omelette
    instance1
    zopepy
    repozo

# If you want to get the last versions of eggs, you have to comment the line "versions-prod.cfg"
extends =
    http://dist.plone.org/release/4.3.20/versions.cfg
    versions-base.cfg
    sphinx.cfg
    port.cfg

versions=versions

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.3.20

# Add additional eggs here
# elementtree is required by Plone
eggs =
    Plone
    Pillow
    Products.PasswordStrength
    Products.PasswordResetTool
    zope.app.component
    imio.pyutils
    plone.restapi
#    PyXML
#- hotfix -#
    Products.PloneHotfix20210518  # <= 4.3, <= 5.2.4
    zeep
    appy
    collective.exportimport

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =

sources = sources
sources-dir = src

always-checkout = true

# Only take stable eggs
#prefer-final = true

# Always unzip eggs
unzip = true

[remotes]
imio = https://github.com/IMIO
imio_push = git@github.com:IMIO

[sources]
Products.urban = git ${remotes:imio}/Products.urban.git  pushurl=${remotes:imio_push}/Products.urban.git branch=urban2.6.x
plonetheme.imioapps = git ${remotes:imio}/plonetheme.imioapps.git pushurl=${remotes:imio_push}/plonetheme.imioapps.git

[omelette]
recipe = collective.recipe.omelette
eggs =
    ${instance1:eggs}
    ${buildout:eggs}
products = ${instance1:products}
#packages = ${zope2:location}/lib/python ./

[instance1]
recipe = plone.recipe.zope2instance
#effective-user = 
user = admin:admin
http-address = 8081
zserver-threads = 2
debug-mode = off
verbose-security = off
zope-conf-additional =
  %define FILESTORAGE ${buildout:directory}/var/filestorage
  %define BLOBSTORAGE ${buildout:directory}/var/blobstorage
  <clock-server>
      method /${port:plone-path}/@@cron-tick
      period 60
      user admin
      password ${port:admin-password}
  </clock-server>

environment-vars =
  OO_PORT ${port:oo-port}
  PYTHON_UNO ${port:python-uno}
  PYTHON_EGG_CACHE ${buildout:directory}/python-eggs
  zope_i18n_compile_mo_files true

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} my.package
eggs =
    ${buildout:eggs}
    Plone
    Products.MasterSelectWidget
    Products.ContentTypeValidator
    Products.urban
    Genshi
    collective.ckeditor
    collective.iconifieddocumentactions
    communesplone.layout
    psycopg2
    plone.app.contenttypes [atrefs]  # <- for dx migration
    imio.pm.locales
    imio.actionspanel
    imio.schedule
    imio.urban.core
    imio.dashboard
    plonetheme.imioapps
    appy

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
    Products.urban
    collective.ckeditor
    collective.iconifieddocumentactions
    imio.pm.locales
    imio.actionspanel

products =
    ${buildout:directory}/products

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance1:eggs}
interpreter = zopepy
scripts = zopepy

[templates]
recipe = zc.recipe.egg:scripts
eggs = Products.urban [templates]

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo

[debug]
eggs =
    ipdb
    iw.debug
    profilehooks
zcml =
    iw.debug
