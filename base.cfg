[buildout]

#dump-picked-versions-file = versions-picked.cfg
#overwrite-picked-versions-file = true

index = http://devpi.imio.be/root/imio/+simple/

parts =
    omelette
    zeoserver
    instance
    upgrade
    zopepy
    repozo

# If you want to get the last versions of eggs, you have to comment the line "versions-prod.cfg"
extends =
    http://dist.plone.org/release/4.3.8/versions.cfg
    port.cfg
    versions-base.cfg
    sphinx.cfg

versions=versions

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.3.8
    http://dist.plone.org/thirdparty
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads

# Add additional eggs here
# elementtree is required by Plone
eggs =
#    collective.upgrade
    Plone
    Pillow
    Products.PasswordStrength
    Products.PasswordResetTool
    zope.app.component
    plone.restapi
#    PyXML
#- hotfix -#
#    Products.PloneHotfix20110720  # <= 3.3.5 , <= 4.0.3
#    Products.PloneHotfix20110531  # <= 3.3.5 , <= 4.0.5
#    Products.PloneHotfix20121106  # <= 4.2.2, <= 4.3a2
#    Products.PloneHotfix20130618 # <= 4.3.1, <= 4.2.5
    Products.PloneHotfix20150910  # <= 3.3, <= 5.0rc1
    Products.PloneHotfix20151208  # <= 3.3, <= 5.0
    Products.PloneHotfix20160419  # <= 3.3, <= 5.1a1
    Products.PloneHotfix20160830  # <= 3.3, <= 5.1a1
    Products.PloneHotfix20161129  # <= 2.5.5, <= 5.1a2
    Products.PloneHotfix20170117  # <= 2.5.5, <= 5.1a2
#    Products.Zope_Hotfix_20110622  # <= 3.3.5 , <= 4.0.7, <= 4.1rc3

# Only take stable eggs
#prefer-final = true

# Always unzip eggs
unzip = true

[zeoserver]
recipe = plone.recipe.zeoserver
zeo-address = ${port:zeo}
#effective-user = ${instance:effective-user}
pack-days = 7
pack-keep-old = false
monitor-address = ${port:zeo-monitor}
zeo-conf-additional =
  %define FILESTORAGE /home/imio/urban/var/filestorage
  %define BLOBSTORAGE /home/imio/urban/var/blobstorage


[instance]
recipe = plone.recipe.zope2instance
#effective-user =
zeo-client = true
zeo-address = ${port:zeo-docker}:${port:zeo}
user = admin:admin
http-address = 8081
zserver-threads = 2
debug-mode = off
verbose-security = off
zope-conf-additional =
  %define FILESTORAGE ${buildout:directory}/var/filestorage
  %define BLOBSTORAGE ${buildout:directory}/var/blobstorage
environment-vars =
  PYTHON_EGG_CACHE ${buildout:directory}/python-eggs
  zope_i18n_compile_mo_files true

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} my.package
eggs =
    ${buildout:eggs}
    Plone
    Products.MasterSelectWidget
    Products.ContentTypeValidator
    Products.urban
    Genshi
    collective.ckeditor
    collective.iconifieddocumentactions
    communesplone.layout
    psycopg2
    plone.app.referenceintegrity
    imio.pm.wsclient
    imio.pm.locales
    imio.actionspanel
    plonetheme.imioapps
    imio.schedule
    appy
    collective.documentgenerator
    urban.restapi

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
    collective.ckeditor
    collective.iconifieddocumentactions
    plone.app.referenceintegrity
    imio.pm.wsclient
    imio.pm.locales
    imio.actionspanel
    plonetheme.imioapps


[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy


[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo

[debug]
eggs =
    ipdb
    iw.debug
    profilehooks
zcml =
    iw.debug

[upgrade]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
scripts = upgrade-portals
arguments = args=[
    '--zope-conf', '${instance:location}/etc/zope.conf',
    '--log-file', '${buildout:directory}/var/log/upgrade.log']

[omelette]
recipe = collective.recipe.omelette
eggs =
    ${instance:eggs}
    ${buildout:eggs}

[remotes]
imio = https://github.com/IMIO
imio_push = git@github.com:IMIO

[sources]
Products.urban = git ${remotes:imio}/Products.urban.git pushurl=${remotes:imio_push}/Products.urban.git
plone.app.referenceintegrity = git https://github.com/imio/plone.app.referenceintegrity.git
imio.pm.wsclient = git https://github.com/IMIO/imio.pm.wsclient.git
imio.pm.locales = git https://github.com/IMIO/imio.pm.locales.git
eea.faceted.vocabularies = git https://github.com/collective/eea.faceted.vocabularies.git
imio.schedule = git https://github.com/imio/imio.schedule.git
collective.faceted.task = git ${remotes:imio}/collective.faceted.task pushurl=${remotes:imio_push}/collective.faceted.task.git
imio.history = git ${remotes:imio}/imio.history pushurl=${remotes:imio_push}/imio.history.git
collective.wfadaptations = git https://github.com/collective/collective.wfadaptations.git
urban.vocabulary = git ${remotes:imio}/urban.vocabulary.git pushurl=${remotes:imio_push}/urban.vocabulary.git
collective.archetypes.select2 = git ${remotes:imio}/collective.archetypes.select2 pushurl=${remotes:imio_push}/collective.archetypes.select2.git
appy = svn https://svn.forge.pallavi.be/appy-dev/dev0
collective.documentgenerator = git https://github.com/collective/collective.documentgenerator.git
urban.restapi = git ${remotes:imio}/urban.restapi.git pushurl=${remotes:imio_push}/urban.restapi.git

